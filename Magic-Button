import tkinter as tk
from PIL import Image, ImageTk
import serial
import openai
import os
import time
import requests

class ImageViewer:
    def __init__(self, image_path):
        self.root = tk.Tk()
        self.root.attributes('-fullscreen', True)
        self.root.configure(bg='#2C2C2C')  # Dark grey background
        
        # Load original image
        original_image = Image.open(image_path)
        
        # Get screen dimensions
        screen_width = self.root.winfo_screenwidth()
        screen_height = self.root.winfo_screenheight()
        
        # Calculate scaling to maintain aspect ratio
        image_ratio = original_image.width / original_image.height
        screen_ratio = screen_width / screen_height
        
        if image_ratio > screen_ratio:
            # Image wider than screen
            new_width = screen_width
            new_height = int(screen_width / image_ratio)
        else:
            # Image taller than screen
            new_height = screen_height
            new_width = int(screen_height * image_ratio)
        
        # Resize image maintaining aspect ratio
        resized_image = original_image.resize((new_width, new_height), Image.LANCZOS)
        
        self.photo = ImageTk.PhotoImage(resized_image)
        
        # Create frame to center image
        frame = tk.Frame(self.root, bg='#2C2C2C')
        frame.pack(fill=tk.BOTH, expand=True)
        
        # Center image in frame
        label = tk.Label(frame, image=self.photo, bg='#2C2C2C')
        label.place(relx=0.5, rely=0.5, anchor=tk.CENTER)
        
        # Bind escape key to close
        self.root.bind('<Escape>', self.close)
        
        self.root.mainloop()
    
    def close(self, event=None):
        self.root.destroy()

def generate_image(prompt):
    try:
        response = openai.Image.create(
            prompt=prompt,
            n=1,
            size="1024x1024"
        )
        return response['data'][0]['url']
    except Exception as e:
        print(f"Error generating image: {e}")
        return None

def download_image(url, filename):
    try:
        response = requests.get(url)
        if response.status_code == 200:
            with open(filename, 'wb') as f:
                f.write(response.content)
            return filename
    except Exception as e:
        print(f"Error downloading image: {e}")
    return None

def main():
    openai.api_key = 'YOUR_API_KEY_HERE'
    SAVE_DIRECTORY = r'EXPORT_LOCATION'
    os.makedirs(SAVE_DIRECTORY, exist_ok=True)

    ser = serial.Serial('COM5', 9600, timeout=1)
    
    try:
        while True:
            if ser.in_waiting > 0:
                line = ser.readline().decode('utf-8').strip()
                if line == "Button Pressed":
                    prompt = 'YOUR_PROMPT_HERE' #ex."A random image in a random style" 

                    image_url = generate_image(prompt)
                    if image_url:
                        image_filename = os.path.join(SAVE_DIRECTORY, f'generated_image_{int(time.time())}.png')
                        downloaded_image = download_image(image_url, image_filename)
                        
                        if downloaded_image:
                            ImageViewer(downloaded_image)
    
    except KeyboardInterrupt:
        ser.close()

if __name__ == "__main__":
    main()
